name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of sonarqube reporting
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: "Add NuGet Source"
        run: |
          dotnet nuget add source --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }} \
            --store-password-in-clear-text \
            --name github "https://nuget.pkg.github.com/${{ github.actor }}/index.json"

      - name: Install dependencies
        run: dotnet restore "./src/hot-iot-tub/hot-iot-tub.csproj"

      - name: Sonarqube Begin
        run: | 
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /o:andreasfedermann /k:andreasfedermann_home-automation /d:sonar.login=${{ secrets.SONAR_TOKEN }} /s:$GITHUB_WORKSPACE/SonarQube.Analysis.xml

      - name: Build
        run: dotnet build

      # - name: Test with the dotnet CLI
      #   run: dotnet test --settings coverlet.runsettings --logger:trx
      #   env:
      #     ASPNETCORE_ENVIRONMENT: Development

      - name: Sonarqube end
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-publish-nuget-packages:
    runs-on: ubuntu-latest
    needs: validate-changes
    steps:
      - uses: actions/checkout@v2

      - name: "Add NuGet Source"
        run: |
          dotnet nuget add source --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }} \
            --store-password-in-clear-text \
            --name github "https://nuget.pkg.github.com/${{ github.actor }}/index.json"

      - name: "Pack NuGet Package"
        run: |
          dotnet pack --configuration Release

      - name: "Push NuGet Package"
        run: |
          dotnet nuget push "src/**/*.nupkg"  --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
